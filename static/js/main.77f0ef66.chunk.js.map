{"version":3,"sources":["actions/index.js","TaskTracker.js","Home.js","App.js","reportWebVitals.js","tasks-reducer.js","index.js"],"names":["initItems","Tasks","type","payload","TaskForm","onAdd","useState","text","setText","className","onSubmit","e","preventDefault","alert","value","onChange","target","TaskItems","tasks","onDelete","map","task","onClick","id","TaskTracker","useSelector","state","dispatch","useDispatch","React","useEffect","require","default","get","then","response","data","console","log","catch","error","newTask","Math","floor","random","newTasks","filteredTasks","filter","Home","About","Users","App","exact","to","activeClassName","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","updateTasks","action","store","createStore","subscribe","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.77f0ef66.chunk.js","sourcesContent":["//action -> what you want to do with your store\r\nexport const initItems = (Tasks) =>{\r\n  return {\r\n    type: 'initItems',\r\n    payload: Tasks\r\n  }\r\n}","import React from \"react\";\r\nimport \"./App.css\";\r\nimport { useState } from 'react'\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {initItems} from './actions';\r\n\r\nconst TaskForm = ({onAdd}) => {\r\n    const [text,setText] = useState('')\r\n\r\n\r\n    return (\r\n        <form className =\"task-input\"\r\n            onSubmit ={(e) => {\r\n         e.preventDefault();\r\n         \r\n        if(!text){\r\n            alert('please add a task');\r\n            return\r\n        }\r\n\r\n        onAdd(text);\r\n        setText('');\r\n\r\n     }} >\r\n            <input type=\"text\" value={text} onChange={(e)=>setText(e.target.value)}/>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst TaskItems = ({tasks, onDelete}) => {\r\n    return(\r\n        <ul className=\"task-list\">\r\n            {tasks.map((task) => (\r\n                <div className=\"list-group-item\"  key={task.id} onClick={() => onDelete(task.id)}>{task.text}</div>\r\n            ))}\r\n        </ul>\r\n    )\r\n}\r\n\r\nconst TaskTracker = () => {\r\n    const tasks = useSelector(state => state);\r\n    const dispatch = useDispatch();\r\n    \r\n\r\n    // get axios for db information\r\n\r\n    React.useEffect(() =>{\r\n        const axios = require('axios').default;\r\n        axios.get('tasksData.json')\r\n        .then(function (response) {\r\n            // handle success\r\n            dispatch(initItems(response.data.tasks)); \r\n            console.log(response.data.tasks);\r\n        })\r\n        .catch(function (error) {\r\n            // handle error\r\n            console.log(error);\r\n        })\r\n        .then(function () {\r\n            // always executed\r\n        });\r\n    },[]);\r\n\r\n    const AddTask = (task) =>{\r\n        const id = task+Math.floor(Math.random() * 9999);\r\n        const newTask = {text: task, id:id};\r\n        const newTasks = {tasks: [...tasks,newTask]}\r\n        console.log(newTasks);\r\n        dispatch(initItems(newTasks.tasks));\r\n    }\r\n\r\n    const DeleteTask = (id) => {\r\n        const filteredTasks = tasks.filter((task) => task.id !== id)\r\n        dispatch(initItems(filteredTasks));\r\n    }\r\n    \r\n    return (\r\n        <div className=\"task-container\">\r\n            <TaskForm onAdd={AddTask}/>\r\n            <TaskItems tasks={tasks} onDelete={DeleteTask}/>\r\n        </div>\r\n    );\r\n    \r\n}\r\n\r\n\r\nexport default TaskTracker;","import \"./Home.css\";\r\nfunction Home() {\r\n  return (\r\n    <div className=\"home-container\">\r\n      <h2>Home</h2>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;","import \"./App.css\";\r\nimport TaskTracker from \"./TaskTracker\";\r\nimport Home from \"./Home\";\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route,\r\n  NavLink\r\n} from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <nav className=\"nav-menu\">\r\n          <ul>\r\n            <li className=\"nav-item\">\r\n              <NavLink exact to=\"/\" activeClassName=\"active\">\r\n                Home\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <NavLink to=\"/about\" activeClassName=\"active\">\r\n                About\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <NavLink to=\"/users\" activeClassName=\"active\">\r\n                Users\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <NavLink to=\"/task-tracker\" activeClassName=\"active\">\r\n                Task Tracker App\r\n              </NavLink>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n\r\n        {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n        <Switch>\r\n          <Route path=\"/about\">\r\n            <About />\r\n          </Route>\r\n          <Route path=\"/users\">\r\n            <Users />\r\n          </Route>\r\n          <Route path=\"/task-tracker\">\r\n            <TaskTracker />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Home />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nfunction About() {\r\n  return <h2>About</h2>;\r\n}\r\n\r\nfunction Users() {\r\n  return <h2>Users</h2>;\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","//reducer -> how to transition states\r\nconst updateTasks = (state = [], action) => {\r\n  switch(action.type){\r\n    case 'initItems':\r\n      return (state = action.payload)\r\n    case 'returnItems':\r\n      return state;\r\n    default : \r\n      return state;\r\n      }\r\n    }\r\n\r\nexport default updateTasks;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\nimport updateTasks from './tasks-reducer';\n\n\n\n\n//store -> global state\nlet store = createStore(updateTasks);\nstore.subscribe(()=> console.log(store.getState()));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}