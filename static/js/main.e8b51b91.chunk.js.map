{"version":3,"sources":["TaskTracker/actions/index.js","TaskTracker/TaskHeader.js","TaskTracker/TaskForm.js","TaskTracker/TaskItems.js","TaskTracker/TaskTracker.js","Home/Home.js","App.js","reportWebVitals.js","TaskTracker/TasksReducer.js","index.js"],"names":["initItems","Tasks","type","payload","TaskHeader","number","tasks","length","className","TaskForm","onAdd","useState","text","setText","onSubmit","e","preventDefault","alert","class","value","onChange","target","TaskItems","onDelete","map","task","onClick","id","connect","state","dispatch","useDispatch","newTask","Math","floor","random","newTasks","filteredTasks","filter","Home","App","exact","to","activeClassName","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","updateTasks","action","store","createStore","subscribe","console","log","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ySACaA,EAAY,SAACC,GACxB,MAAO,CACLC,KAAM,YACNC,QAASF,I,OCeEG,EAnBK,SAAC,GAAa,IACxBC,EADuB,EAAXC,MACGC,OAErB,OAAe,IAAXF,EAEI,qBAAKG,UAAU,cAAf,SACI,2CAAcH,EAAd,sBAMJ,qBAAKG,UAAU,cAAf,SACI,wD,QCaDC,EAxBE,SAAC,GAAa,IAAZC,EAAW,EAAXA,MAAW,EACHC,mBAAS,IADN,mBACnBC,EADmB,KACdC,EADc,KAI1B,OACI,uBAAML,UAAW,aACbM,SAAW,SAACC,GACfA,EAAEC,iBAECJ,GAKJF,EAAME,GACNC,EAAQ,KALJI,MAAM,sBALV,UAaI,uBAAOC,MAAM,aAAahB,KAAK,OAAOiB,MAAOP,EAAMQ,SAAU,SAACL,GAAD,OAAKF,EAAQE,EAAEM,OAAOF,UACnF,uBAAOD,MAAM,MAAMhB,KAAK,SAASiB,MAAM,eCXpCG,EAVG,SAAC,GAAuB,IAAtBhB,EAAqB,EAArBA,MAAOiB,EAAc,EAAdA,SACvB,OACI,oBAAIf,UAAU,YAAd,SACKF,EAAMkB,KAAI,SAACC,GAAD,OACP,qBAAKjB,UAAU,kBAAiCkB,QAAS,kBAAMH,EAASE,EAAKE,KAA7E,SAAmFF,EAAKb,MAAjDa,EAAKE,UCqC7CC,eAjCS,SAAAC,GAAK,MAAK,CAC9BvB,MAAQuB,KAgCGD,EA7BK,SAAC,GAAa,IAAZtB,EAAW,EAAXA,MAEZwB,EAAWC,cAcjB,OACI,sBAAKvB,UAAU,iBAAf,UACI,cAAC,EAAD,CAAYF,MAAOA,IACnB,cAAC,EAAD,CAAUI,MAfF,SAACe,GACb,IACMO,EAAU,CAACpB,KAAMa,EAAME,GADlBF,EAAKQ,KAAKC,MAAsB,KAAhBD,KAAKE,WAE1BC,EAAW,CAAC9B,MAAM,GAAD,mBAAMA,GAAN,CAAY0B,KACnCF,EAAS9B,EAAUoC,EAAS9B,WAYxB,cAAC,EAAD,CAAWA,MAAOA,EAAOiB,SATd,SAACI,GAChB,IAAMU,EAAgB/B,EAAMgC,QAAO,SAACb,GAAD,OAAUA,EAAKE,KAAOA,KACzDG,EAAS9B,EAAUqC,a,MCTZE,MAff,WACE,OACE,qBAAK/B,UAAU,iBAAf,SACE,qBAAKA,UAAU,MAAf,SACE,sBAAKA,UAAU,MAAf,UACE,oBAAIA,UAAU,aAAd,8BACA,uE,eCuCKgC,MApCf,WACE,OACE,eAAC,IAAD,WACE,qBAAKhC,UAAU,MAAf,SACE,qBAAKA,UAAU,WAAf,SACE,+BACE,oBAAIA,UAAU,WAAd,SACE,cAAC,IAAD,CAASiC,OAAK,EAACC,GAAG,IAAIC,gBAAgB,SAAtC,oBAIF,oBAAInC,UAAU,WAAd,SACE,cAAC,IAAD,CAASkC,GAAG,gBAAgBC,gBAAgB,SAA5C,uCAUR,qBAAKnC,UAAU,MAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOoC,KAAK,gBAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,EAAD,eC1BGC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,QC0BCQ,EAhCK,WAqBL,IArBMzB,EAqBP,uDArBe,CAC3B,CACE,KAAQ,wBACR,GAAM,GAER,CACE,KAAQ,mBACR,GAAM,GAER,CACE,KAAQ,YACR,GAAM,GAER,CACE,KAAQ,kBACR,GAAM,GAER,CACE,KAAQ,mBACR,GAAM,IAEP0B,EAAW,uCACZ,OAAOA,EAAOrD,MACZ,IAAK,YACH,OAAgBqD,EAAOpD,QACzB,IAAK,cAEL,QACE,OAAO0B,IChBT2B,EAAQC,YAAYH,GACxBE,EAAME,WAAU,kBAAKC,QAAQC,IAAIJ,EAAMK,eAEvCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUR,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJS,SAASC,eAAe,SAM1BrB,M","file":"static/js/main.e8b51b91.chunk.js","sourcesContent":["//action -> what you want to do with your store\r\nexport const initItems = (Tasks) =>{\r\n  return {\r\n    type: 'initItems',\r\n    payload: Tasks\r\n  }\r\n}"," const TaskHeader = ({tasks}) => {\r\n    const number = tasks.length;\r\n\r\n    if (number !== 0){\r\n        return (\r\n            <div className=\"task-header\">\r\n                <h3>You have {number} active tasks!</h3>\r\n            </div>       \r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <div className=\"task-header\">\r\n                <h3>You no active tasks</h3>\r\n            </div> \r\n        )\r\n    }\r\n}\r\n\r\nexport default TaskHeader","import { useState } from 'react'\r\n\r\nconst TaskForm = ({onAdd}) => {\r\n    const [text,setText] = useState('')\r\n\r\n\r\n    return (\r\n        <form className =\"task-input\"\r\n            onSubmit ={(e) => {\r\n         e.preventDefault();\r\n         \r\n        if(!text){\r\n            alert('please add a task');\r\n            return\r\n        }\r\n\r\n        onAdd(text);\r\n        setText('');\r\n\r\n     }} >\r\n            <input class=\"input-text\" type=\"text\" value={text} onChange={(e)=>setText(e.target.value)}/>\r\n            <input class=\"btn\" type=\"submit\" value=\"Submit\"/>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default TaskForm;","const TaskItems = ({tasks, onDelete}) => {\r\n    return(\r\n        <ul className=\"task-list\">\r\n            {tasks.map((task) => (\r\n                <div className=\"list-group-item\"  key={task.id} onClick={() => onDelete(task.id)}>{task.text}</div>\r\n            ))}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default TaskItems;","import React from \"react\";\r\nimport \"./TaskTracker.css\";\r\nimport {connect, useSelector, useDispatch} from 'react-redux';\r\nimport {initItems} from './actions';\r\nimport TaskHeader from './TaskHeader';\r\nimport TaskForm from './TaskForm';\r\nimport TaskItems from './TaskItems';\r\n\r\nconst mapStateToProps = state => ({\r\n    tasks : state,\r\n});\r\n\r\nconst TaskTracker = ({tasks}) => {\r\n    // const tasks = useSelector(state => state);\r\n    const dispatch = useDispatch();\r\n\r\n    const AddTask = (task) =>{\r\n        const id = task+Math.floor(Math.random() * 9999);\r\n        const newTask = {text: task, id:id};\r\n        const newTasks = {tasks: [...tasks,newTask]}\r\n        dispatch(initItems(newTasks.tasks));\r\n    }\r\n\r\n    const DeleteTask = (id) => {\r\n        const filteredTasks = tasks.filter((task) => task.id !== id)\r\n        dispatch(initItems(filteredTasks));\r\n    }\r\n    \r\n    return (\r\n        <div className=\"task-container\">\r\n            <TaskHeader tasks={tasks}/>\r\n            <TaskForm onAdd={AddTask}/>\r\n            <TaskItems tasks={tasks} onDelete={DeleteTask}/>\r\n        </div>\r\n    );\r\n    \r\n}\r\n\r\n\r\n\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(TaskTracker);","import \"./Home.scss\";\r\nfunction Home() {\r\n  return (\r\n    <div className=\"home-container\">\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <h2 className=\"home-intro\">Hello, I'm Diego</h2>\r\n          <h1>\r\n            I'm an aspiring web developer\r\n          </h1>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;","import \"./App.css\";\r\nimport TaskTracker from \"./TaskTracker/TaskTracker\";\r\nimport Home from \"./Home/Home\";\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route,\r\n  NavLink\r\n} from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"row\">\r\n        <nav className=\"nav-menu\">\r\n          <ul>\r\n            <li className=\"nav-item\">\r\n              <NavLink exact to=\"/\" activeClassName=\"active\">\r\n                Home\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <NavLink to=\"/task-tracker\" activeClassName=\"active\">\r\n                Task Tracker App\r\n              </NavLink>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n\r\n      {/* A <Switch> looks through its children <Route>s and\r\n          renders the first one that matches the current URL. */}\r\n      <div className=\"row\">\r\n        <Switch>\r\n          <Route path=\"/task-tracker\">\r\n            <TaskTracker />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Home />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","//reducer -> how to transition states\r\nconst updateTasks = (state = [\r\n  {\r\n    \"text\": \"Study Web Development\",\r\n    \"id\": 0\r\n  },\r\n  {\r\n    \"text\": \"Play video games\",\r\n    \"id\": 1\r\n  },\r\n  {\r\n    \"text\": \"Cook food\",\r\n    \"id\": 2\r\n  },\r\n  {\r\n    \"text\": \"Listen to music\",\r\n    \"id\": 3\r\n  },\r\n  {\r\n    \"text\": \"Sketch portraits\",\r\n    \"id\": 4\r\n  }\r\n], action) => {\r\n  switch(action.type){\r\n    case 'initItems':\r\n      return (state = action.payload)\r\n    case 'returnItems':\r\n      return state;\r\n    default : \r\n      return state;\r\n      }\r\n    }\r\n\r\nexport default updateTasks;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\nimport updateTasks from './TaskTracker/TasksReducer';\n\n\n\n\n//store -> global state\nlet store = createStore(updateTasks);\nstore.subscribe(()=> console.log(store.getState()));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}